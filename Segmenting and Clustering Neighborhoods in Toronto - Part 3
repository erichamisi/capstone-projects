{
    "cells": [
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "# Segmenting and Clustering Neighborhoods in Toronto | Part-3"
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "1. Start by creating a new Notebook for this assignment.\n\n2. Use the Notebook to build the code to scrape the following Wikipedia page, https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M, in order to obtain the data that is in the table of postal codes and to transform the data into a pandas dataframe.\nFor this assignment, you will be required to explore and cluster the neighborhoods in Toronto.\n\n3. To create the above dataframe:\n\n. \n- The dataframe will consist of three columns: PostalCode, Borough, and Neighborhood.\n- Only process the cells that have an assigned borough. Ignore cells with a borough that is Not assigned.\n- More than one neighborhood can exist in one postal code area. For example, in the table on the Wikipedia page, you will notice that M5A is listed twice and has two neighborhoods: Harbourfront and Regent Park. These two rows will be combined into one row with the neighborhoods separated with a comma as shown in row 11 in the above table.\n- If a cell has a borough but a Not assigned neighborhood, then the neighborhood will be the same as the borough. So for the 9th cell in the table on the Wikipedia page, the value of the Borough and the Neighborhood columns will be Queen's Park.\n- Clean your Notebook and add Markdown cells to explain your work and any assumptions you are making.\n- In the last cell of your notebook, use the .shape method to print the number of rows of your dataframe.\n.\n\n\n4. Submit a link to your Notebook on your Github repository. (10 marks)\n\nNote: There are different website scraping libraries and packages in Python. For scraping the above table, you can simply use pandas to read the table into a pandas dataframe.\n\nAnother way, which would help to learn for more complicated cases of web scraping is using the BeautifulSoup package. Here is the package's main documentation page: http://beautiful-soup-4.readthedocs.io/en/latest/\n\nThe package is so popular that there is a plethora of tutorials and examples on how to use it. Here is a very good Youtube video on how to use the BeautifulSoup package: https://www.youtube.com/watch?v=ng2o98k983k\n\nUse pandas, or the BeautifulSoup package, or any other way you are comfortable with to transform the data in the table on the Wikipedia page into the above pandas dataframe."
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "#### Foursquare API to explore neighborhoods on selected cities in Toronto"
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "Installing Libraries"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "!pip install geopy\n!pip install folium\nprint(\"Installed!\")",
            "execution_count": 52,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "Requirement already satisfied: geopy in /opt/conda/envs/Python36/lib/python3.6/site-packages (1.18.1)\nRequirement already satisfied: geographiclib<2,>=1.49 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from geopy) (1.49)\nRequirement already satisfied: folium in /opt/conda/envs/Python36/lib/python3.6/site-packages (0.10.1)\nRequirement already satisfied: numpy in /opt/conda/envs/Python36/lib/python3.6/site-packages (from folium) (1.15.4)\nRequirement already satisfied: jinja2>=2.9 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from folium) (2.10)\nRequirement already satisfied: requests in /opt/conda/envs/Python36/lib/python3.6/site-packages (from folium) (2.21.0)\nRequirement already satisfied: branca>=0.3.0 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from folium) (0.4.0)\nRequirement already satisfied: MarkupSafe>=0.23 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from jinja2>=2.9->folium) (1.1.0)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from requests->folium) (2019.11.28)\nRequirement already satisfied: idna<2.9,>=2.5 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from requests->folium) (2.8)\nRequirement already satisfied: chardet<3.1.0,>=3.0.2 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from requests->folium) (3.0.4)\nRequirement already satisfied: urllib3<1.25,>=1.21.1 in /opt/conda/envs/Python36/lib/python3.6/site-packages (from requests->folium) (1.24.1)\nRequirement already satisfied: six in /opt/conda/envs/Python36/lib/python3.6/site-packages (from branca>=0.3.0->folium) (1.12.0)\nInstalled!\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "Importing Libraries"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "import folium\nimport requests \nimport json \nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\nimport pandas as pd\n\nfrom pandas.io.json import json_normalize \nfrom sklearn.cluster import KMeans\nfrom geopy.geocoders import Nominatim \n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\nprint(\"Imported!\")",
            "execution_count": 53,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "Imported!\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "df = pd.read_csv('toronto_part2.csv')\nprint(df.shape)\ndf.head()",
            "execution_count": 54,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "(180, 5)\n",
                    "name": "stdout"
                },
                {
                    "output_type": "execute_result",
                    "execution_count": 54,
                    "data": {
                        "text/plain": "  Postalcode         Borough                              Neighborhood  \\\n0      M1A\\n  Not assigned\\n                                       NaN   \n1      M1B\\n   Scarborough\\n                           Malvern / Rouge   \n2      M1C\\n   Scarborough\\n  Rouge Hill / Port Union / Highland Creek   \n3      M1E\\n   Scarborough\\n       Guildwood / Morningside / West Hill   \n4      M1G\\n   Scarborough\\n                                    Woburn   \n\n    Latitude  Longitude  \n0  43.648690 -79.385440  \n1  43.808626 -79.189913  \n2  43.785779 -79.157368  \n3  43.765806 -79.185284  \n4  43.771545 -79.218135  ",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postalcode</th>\n      <th>Borough</th>\n      <th>Neighborhood</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M1A\\n</td>\n      <td>Not assigned\\n</td>\n      <td>NaN</td>\n      <td>43.648690</td>\n      <td>-79.385440</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M1B\\n</td>\n      <td>Scarborough\\n</td>\n      <td>Malvern / Rouge</td>\n      <td>43.808626</td>\n      <td>-79.189913</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M1C\\n</td>\n      <td>Scarborough\\n</td>\n      <td>Rouge Hill / Port Union / Highland Creek</td>\n      <td>43.785779</td>\n      <td>-79.157368</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M1E\\n</td>\n      <td>Scarborough\\n</td>\n      <td>Guildwood / Morningside / West Hill</td>\n      <td>43.765806</td>\n      <td>-79.185284</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M1G\\n</td>\n      <td>Scarborough\\n</td>\n      <td>Woburn</td>\n      <td>43.771545</td>\n      <td>-79.218135</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "address = 'Toronto, Ontario Canada'\ngeolocator = Nominatim()\nlocation = geolocator.geocode(address)\nlatitude = location.latitude\nlongitude = location.longitude\nprint('The geograpical coordinate of Toronto Canada are {}, {}.'.format(latitude, longitude))",
            "execution_count": 55,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "/opt/conda/envs/Python36/lib/python3.6/site-packages/ipykernel/__main__.py:2: DeprecationWarning: Using Nominatim with the default \"geopy/1.18.1\" `user_agent` is strongly discouraged, as it violates Nominatim's ToS https://operations.osmfoundation.org/policies/nominatim/ and may possibly cause 403 and 429 HTTP errors. Please specify a custom `user_agent` with `Nominatim(user_agent=\"my-application\")` or by overriding the default `user_agent`: `geopy.geocoders.options.default_user_agent = \"my-application\"`. In geopy 2.0 this will become an exception.\n  from ipykernel import kernelapp as app\n",
                    "name": "stderr"
                },
                {
                    "output_type": "stream",
                    "text": "The geograpical coordinate of Toronto Canada are 43.6534817, -79.3839347.\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "map_toronto = folium.Map(location=[latitude, longitude], zoom_start=11)\nfor lat, lng, borough, neighborhood in zip(df['Latitude'], df['Longitude'], df['Borough'], df['Neighborhood']):\n    label = '{}, {}'.format(neighborhood, borough)\n    label = folium.Popup(label, parse_html=True)\n    folium.CircleMarker(\n        [lat, lng],\n        radius=4,\n        popup=label,\n        color='blue',\n        fill=True,\n        fill_color='#87cefa',\n        fill_opacity=0.5,\n        parse_html=False).add_to(map_toronto)\nmap_toronto",
            "execution_count": 56,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 56,
                    "data": {
                        "text/plain": "<folium.folium.Map at 0x7f06a9bddf60>",
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "toronto_data = df[df['Borough'].str.contains(\"Toronto\")].reset_index(drop=True)\nprint(toronto_data.shape)\ntoronto_data.head()",
            "execution_count": 57,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "(39, 5)\n",
                    "name": "stdout"
                },
                {
                    "output_type": "execute_result",
                    "execution_count": 57,
                    "data": {
                        "text/plain": "  Postalcode            Borough                     Neighborhood   Latitude  \\\n0      M4E\\n     East Toronto\\n                      The Beaches  43.678148   \n1      M4K\\n     East Toronto\\n    The Danforth West / Riverdale  43.683424   \n2      M4L\\n     East Toronto\\n  India Bazaar / The Beaches West  43.668291   \n3      M4M\\n     East Toronto\\n                  Studio District  43.648000   \n4      M4N\\n  Central Toronto\\n                    Lawrence Park  43.729455   \n\n   Longitude  \n0 -79.295349  \n1 -79.354564  \n2 -79.315578  \n3 -79.339260  \n4 -79.386415  ",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postalcode</th>\n      <th>Borough</th>\n      <th>Neighborhood</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M4E\\n</td>\n      <td>East Toronto\\n</td>\n      <td>The Beaches</td>\n      <td>43.678148</td>\n      <td>-79.295349</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M4K\\n</td>\n      <td>East Toronto\\n</td>\n      <td>The Danforth West / Riverdale</td>\n      <td>43.683424</td>\n      <td>-79.354564</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M4L\\n</td>\n      <td>East Toronto\\n</td>\n      <td>India Bazaar / The Beaches West</td>\n      <td>43.668291</td>\n      <td>-79.315578</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M4M\\n</td>\n      <td>East Toronto\\n</td>\n      <td>Studio District</td>\n      <td>43.648000</td>\n      <td>-79.339260</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M4N\\n</td>\n      <td>Central Toronto\\n</td>\n      <td>Lawrence Park</td>\n      <td>43.729455</td>\n      <td>-79.386415</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "map_toronto = folium.Map(location=[latitude, longitude], zoom_start=11)\n\nfor lat, lng, label in zip(toronto_data['Latitude'], toronto_data['Longitude'], toronto_data['Neighborhood']):\n    label = folium.Popup(label, parse_html=True)\n    folium.CircleMarker([lat, lng], radius=5, popup=label, color='blue', fill=True, fill_color='#3186cc', fill_opacity=0.7,parse_html=False).add_to(map_toronto)  \nmap_toronto",
            "execution_count": 58,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 58,
                    "data": {
                        "text/plain": "<folium.folium.Map at 0x7f06a9bddac8>",
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "# Foursquare API\nCLIENT_ID = 'DPBYY4JUY3DU20ALPSUV4ONY2K1GOJJKJ1NIHBB32XEMOVYY' # Put Your Client Id\nCLIENT_SECRET = '1MV443TYEP4HUO0WDUW5NQ5W10L2Y4G05NWG11WIR3NUGC5B' # Put You Client Secret \nVERSION = '20180604'\nLIMIT = 30\nprint('Your credentails:')\nprint('CLIENT_ID: Hidden')\nprint('CLIENT_SECRET: Hidden')",
            "execution_count": 59,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "Your credentails:\nCLIENT_ID: Hidden\nCLIENT_SECRET: Hidden\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "#### 1. Exploring Neighbourhood in Toronto\n"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n    \n    venues_list=[]\n    for name, lat, lng in zip(names, latitudes, longitudes):\n        print(name)\n        \n        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n            CLIENT_ID, CLIENT_SECRET, VERSION, lat, lng, radius, LIMIT)\n        \n        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n        \n        venues_list.append([( name, lat, lng, v['venue']['name'], v['venue']['location']['lat'], v['venue']['location']['lng'], v['venue']['categories'][0]['name']) for v in results])\n\n    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n    nearby_venues.columns = ['Neighborhood', 'Neighborhood Latitude', 'Neighborhood Longitude', 'Venue', 'Venue Latitude', 'Venue Longitude', 'Venue Category']\n    \n    return(nearby_venues)",
            "execution_count": 60,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "df = toronto_data\ntoronto_venues = getNearbyVenues(names=df['Neighborhood'], latitudes=df['Latitude'],longitudes=df['Longitude'])",
            "execution_count": 61,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "The Beaches\nThe Danforth West / Riverdale\nIndia Bazaar / The Beaches West\nStudio District\nLawrence Park\nDavisville North\nNorth Toronto West\nDavisville\nMoore Park / Summerhill East\nSummerhill West / Rathnelly / South Hill / Forest Hill SE / Deer Park\nRosedale\n",
                    "name": "stdout"
                },
                {
                    "output_type": "error",
                    "ename": "KeyError",
                    "evalue": "'groups'",
                    "traceback": [
                        "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
                        "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
                        "\u001b[0;32m<ipython-input-61-dab1d8b7dd75>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtoronto_data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mtoronto_venues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetNearbyVenues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnames\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Neighborhood'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlatitudes\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Latitude'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlongitudes\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Longitude'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
                        "\u001b[0;32m<ipython-input-60-5785c99d4e5a>\u001b[0m in \u001b[0;36mgetNearbyVenues\u001b[0;34m(names, latitudes, longitudes, radius)\u001b[0m\n\u001b[1;32m      8\u001b[0m             CLIENT_ID, CLIENT_SECRET, VERSION, lat, lng, radius, LIMIT)\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m         \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"response\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'groups'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'items'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m         \u001b[0mvenues_list\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlng\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'venue'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'name'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'venue'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'location'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'lat'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'venue'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'location'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'lng'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'venue'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'categories'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'name'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                        "\u001b[0;31mKeyError\u001b[0m: 'groups'"
                    ]
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "print(toronto_venues.shape)\ntoronto_venues.head()",
            "execution_count": null,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "toronto_venues.groupby('Neighborhood').count()",
            "execution_count": null,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "print('There are {} uniques categories.'.format(len(toronto_venues['Venue Category'].unique())))",
            "execution_count": null,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "#### 2. Analyze Each Borough Neighborhood"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "toronto_onehot = pd.get_dummies(toronto_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n\ntoronto_onehot['Neighborhood'] = toronto_venues['Neighborhood'] \n\nfixed_columns = [toronto_onehot.columns[-1]] + list(toronto_onehot.columns[:-1])\ntoronto_onehot = toronto_onehot[fixed_columns]\n\ntoronto_onehot.head()",
            "execution_count": null,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "toronto_onehot.shape",
            "execution_count": null,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "toronto_grouped = toronto_onehot.groupby('Neighborhood').mean().reset_index()\ntoronto_grouped",
            "execution_count": null,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "toronto_grouped.shape",
            "execution_count": null,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "num_top_venues = 5\nfor neigh in toronto_grouped['Neighborhood']:\n    print(\"----\"+neigh+\"----\")\n    temp = toronto_grouped[toronto_grouped['Neighborhood'] == neigh].T.reset_index()\n    temp.columns = ['venue','freq']\n    temp = temp.iloc[1:]\n    temp['freq'] = temp['freq'].astype(float)\n    temp = temp.round({'freq': 2})\n    print(temp.sort_values('freq', ascending=False).reset_index(drop=True).head(num_top_venues))\n    print('\\n')",
            "execution_count": 62,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "----Berczy Park----\n                venue  freq\n0        Cocktail Bar  0.07\n1      Farmers Market  0.07\n2            Beer Bar  0.07\n3  Seafood Restaurant  0.07\n4                Caf\u00e9  0.07\n\n\n----Brockton / Parkdale Village / Exhibition Place----\n                    venue  freq\n0                    Caf\u00e9  0.10\n1             Coffee Shop  0.07\n2               Gift Shop  0.07\n3  Thrift / Vintage Store  0.07\n4      Italian Restaurant  0.03\n\n\n----Business reply mail Processing CentrE----\n          venue  freq\n0          Caf\u00e9  0.10\n1   Pizza Place  0.07\n2         Hotel  0.07\n3  Concert Hall  0.07\n4    Steakhouse  0.03\n\n\n----CN Tower / King and Spadina / Railway Lands / Harbourfront West / Bathurst\n Quay / South Niagara / Island airport----\n                venue  freq\n0          Restaurant  0.13\n1                Park  0.07\n2  Italian Restaurant  0.07\n3                Caf\u00e9  0.03\n4         Men's Store  0.03\n\n\n----Central Bay Street----\n                 venue  freq\n0          Coffee Shop  0.10\n1             Tea Room  0.07\n2  Japanese Restaurant  0.07\n3           Poke Place  0.03\n4   Chinese Restaurant  0.03\n\n\n----Christie----\n           venue  freq\n0           Caf\u00e9  0.23\n1  Grocery Store  0.23\n2    Coffee Shop  0.15\n3           Park  0.08\n4    Candy Store  0.08\n\n\n----Church and Wellesley----\n               venue  freq\n0        Coffee Shop  0.10\n1            Gay Bar  0.07\n2        Men's Store  0.07\n3          Juice Bar  0.03\n4  Martial Arts Dojo  0.03\n\n\n----Commerce Court / Victoria Hotel----\n                 venue  freq\n0                 Caf\u00e9  0.13\n1          Coffee Shop  0.10\n2           Restaurant  0.10\n3                Hotel  0.07\n4  Japanese Restaurant  0.07\n\n\n----Davisville----\n                venue  freq\n0        Dessert Shop  0.11\n1      Sandwich Place  0.07\n2  Italian Restaurant  0.07\n3                Caf\u00e9  0.07\n4         Coffee Shop  0.07\n\n\n----Davisville North----\n               venue  freq\n0               Park  0.17\n1                Gym  0.17\n2     Breakfast Spot  0.17\n3   Department Store  0.17\n4  Food & Drink Shop  0.17\n\n\n----Dufferin / Dovercourt Village----\n                    venue  freq\n0                    Park  0.17\n1                  Bakery  0.08\n2                    Pool  0.08\n3                    Caf\u00e9  0.08\n4  Furniture / Home Store  0.08\n\n\n----First Canadian Place / Underground city----\n                venue  freq\n0                Caf\u00e9  0.13\n1          Restaurant  0.10\n2         Coffee Shop  0.10\n3       Deli / Bodega  0.07\n4  Seafood Restaurant  0.07\n\n\n----Forest Hill North & West----\n                        venue  freq\n0                        Park   0.5\n1                Home Service   0.5\n2  Modern European Restaurant   0.0\n3                      Market   0.0\n4           Martial Arts Dojo   0.0\n\n\n----Garden District, Ryerson----\n              venue  freq\n0              Caf\u00e9  0.10\n1       Coffee Shop  0.10\n2           Theater  0.07\n3  Ramen Restaurant  0.07\n4            Lounge  0.03\n\n\n----Harbourfront East / Union Station / Toronto Islands----\n             venue  freq\n0  Harbor / Marina  0.33\n1       Theme Park  0.33\n2             Farm  0.17\n3             Park  0.17\n4      Opera House  0.00\n\n\n----High Park / The Junction South----\n                  venue  freq\n0     Convenience Store  0.14\n1          Tennis Court  0.14\n2                  Park  0.14\n3  Gym / Fitness Center  0.14\n4         Metro Station  0.14\n\n\n----India Bazaar / The Beaches West----\n               venue  freq\n0     Sandwich Place  0.10\n1  Fish & Chips Shop  0.05\n2       Intersection  0.05\n3        Coffee Shop  0.05\n4       Liquor Store  0.05\n\n\n----Kensington Market / Chinatown / Grange Park----\n                   venue  freq\n0                   Caf\u00e9  0.13\n1  Vietnamese Restaurant  0.10\n2    Dumpling Restaurant  0.07\n3            Coffee Shop  0.07\n4     Mexican Restaurant  0.07\n\n\n----Lawrence Park----\n                       venue  freq\n0                     Lawyer  0.33\n1                Swim School  0.33\n2                   Bus Line  0.33\n3                Yoga Studio  0.00\n4  Middle Eastern Restaurant  0.00\n\n\n----Little Portugal / Trinity----\n                   venue  freq\n0                    Bar  0.13\n1  Vietnamese Restaurant  0.07\n2       Asian Restaurant  0.07\n3            Pizza Place  0.07\n4            Yoga Studio  0.03\n\n\n----Moore Park / Summerhill East----\n                venue  freq\n0   Convenience Store  0.25\n1                 Gym  0.25\n2         Summer Camp  0.25\n3          Playground  0.25\n4  Miscellaneous Shop  0.00\n\n\n----North Toronto West----\n          venue  freq\n0      Gym Pool  0.25\n1    Playground  0.25\n2        Garden  0.25\n3          Park  0.25\n4  Noodle House  0.00\n\n\n----Parkdale / Roncesvalles----\n                         venue  freq\n0                  Coffee Shop  0.10\n1          American Restaurant  0.07\n2  Eastern European Restaurant  0.07\n3                   Restaurant  0.07\n4                    Gift Shop  0.07\n\n\n----Queen's Park / Ontario Provincial Government----\n                venue  freq\n0         Coffee Shop  0.37\n1                Caf\u00e9  0.07\n2         Yoga Studio  0.03\n3           Bookstore  0.03\n4  Italian Restaurant  0.03\n\n\n----Regent Park / Harbourfront----\n                venue  freq\n0                 Pub  0.12\n1         Music Venue  0.08\n2                Caf\u00e9  0.08\n3  Athletics & Sports  0.08\n4         Coffee Shop  0.08\n\n\n----Richmond / Adelaide / King----\n              venue  freq\n0              Caf\u00e9  0.10\n1             Hotel  0.07\n2  Asian Restaurant  0.07\n3         Gastropub  0.07\n4         Speakeasy  0.03\n\n\n----Rosedale----\n                        venue  freq\n0                        Park  0.25\n1               Grocery Store  0.25\n2                 Candy Store  0.25\n3                  Playground  0.25\n4  Modern European Restaurant  0.00\n\n\n----Roselawn----\n                venue  freq\n0                 Spa   0.5\n1        Home Service   0.5\n2         Yoga Studio   0.0\n3  Miscellaneous Shop   0.0\n4              Market   0.0\n\n\n----Runnymede / Swansea----\n                venue  freq\n0                Caf\u00e9  0.13\n1  Falafel Restaurant  0.07\n2  Italian Restaurant  0.07\n3    Sushi Restaurant  0.07\n4            Tea Room  0.03\n\n\n----St. James Town----\n                venue  freq\n0           Gastropub  0.10\n1                Caf\u00e9  0.07\n2          Restaurant  0.07\n3         Coffee Shop  0.07\n4  Italian Restaurant  0.07\n\n\n----St. James Town / Cabbagetown----\n                venue  freq\n0                Caf\u00e9  0.07\n1  Italian Restaurant  0.07\n2          Restaurant  0.07\n3              Bakery  0.07\n4           Pet Store  0.03\n\n\n----Stn A PO Boxes----\n          venue  freq\n0          Caf\u00e9  0.10\n1   Pizza Place  0.07\n2         Hotel  0.07\n3  Concert Hall  0.07\n4    Steakhouse  0.03\n\n\n----Studio District----\n                 venue  freq\n0       Baseball Field  0.25\n1         Night Market  0.25\n2  Government Building  0.25\n3     Business Service  0.25\n4          Opera House  0.00\n\n\n----Summerhill West / Rathnelly / South Hill / Forest Hill SE / Deer Park----\n                venue  freq\n0         Coffee Shop  0.25\n1  Light Rail Station  0.25\n2        Liquor Store  0.12\n3         Supermarket  0.12\n4        Skating Rink  0.12\n\n\n----The Annex / North Midtown / Yorkville----\n            venue  freq\n0  Sandwich Place  0.12\n1            Caf\u00e9  0.08\n2      Donut Shop  0.04\n3     Coffee Shop  0.04\n4      Restaurant  0.04\n\n\n----The Beaches----\n               venue  freq\n0  Health Food Store  0.17\n1              Trail  0.17\n2                Pub  0.17\n3             Church  0.17\n4        Coffee Shop  0.17\n\n\n----The Danforth West / Riverdale----\n              venue  freq\n0              Park   0.2\n1     Grocery Store   0.2\n2          Bus Line   0.2\n3    Discount Store   0.2\n4  Business Service   0.2\n\n\n----Toronto Dominion Centre / Design Exchange----\n                 venue  freq\n0          Coffee Shop  0.17\n1                 Caf\u00e9  0.10\n2        Deli / Bodega  0.07\n3           Restaurant  0.07\n4  Japanese Restaurant  0.07\n\n\n----University of Toronto / Harbord----\n                 venue  freq\n0                 Caf\u00e9  0.17\n1                 Park  0.07\n2           Restaurant  0.07\n3            Bookstore  0.07\n4  Japanese Restaurant  0.07\n\n\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "def return_most_common_venues(row, num_top_venues):\n    row_categories = row.iloc[1:]\n    row_categories_sorted = row_categories.sort_values(ascending=False)\n    return row_categories_sorted.index.values[0:num_top_venues]",
            "execution_count": 63,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "import numpy as np\nnum_top_venues = 10\nindicators = ['st', 'nd', 'rd']\n\ncolumns = ['Neighborhood']\nfor ind in np.arange(num_top_venues):\n    try:\n        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n    except:\n        columns.append('{}th Most Common Venue'.format(ind+1))\n\nneighborhoods_venues_sorted = pd.DataFrame(columns=columns)\nneighborhoods_venues_sorted['Neighborhood'] = toronto_grouped['Neighborhood']\n\nfor ind in np.arange(toronto_grouped.shape[0]):\n    neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(toronto_grouped.iloc[ind, :], num_top_venues)\n\nneighborhoods_venues_sorted.shape",
            "execution_count": 64,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 64,
                    "data": {
                        "text/plain": "(39, 11)"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "#### 3. Clustering Neighborhoods"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "from sklearn.cluster import KMeans\nimport sklearn.cluster.k_means_\nkm = KMeans(n_clusters=3, init='k-means++', max_iter=100, n_init=1, \n  verbose=True)",
            "execution_count": 65,
            "outputs": []
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "kclusters = 10\ntoronto_grouped_clustering = toronto_grouped.drop('Neighborhood', 1)\nkmeans = KMeans(n_clusters=kclusters, random_state=1).fit(toronto_grouped_clustering)\nprint(kmeans.labels_[0:10])\nprint(len(kmeans.labels_))",
            "execution_count": 66,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "[5 5 5 5 1 5 1 5 5 6]\n39\n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "df.head()",
            "execution_count": 67,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 67,
                    "data": {
                        "text/plain": "  Postalcode            Borough                     Neighborhood   Latitude  \\\n0      M4E\\n     East Toronto\\n                      The Beaches  43.678148   \n1      M4K\\n     East Toronto\\n    The Danforth West / Riverdale  43.683424   \n2      M4L\\n     East Toronto\\n  India Bazaar / The Beaches West  43.668291   \n3      M4M\\n     East Toronto\\n                  Studio District  43.648000   \n4      M4N\\n  Central Toronto\\n                    Lawrence Park  43.729455   \n\n   Longitude  \n0 -79.295349  \n1 -79.354564  \n2 -79.315578  \n3 -79.339260  \n4 -79.386415  ",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postalcode</th>\n      <th>Borough</th>\n      <th>Neighborhood</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M4E\\n</td>\n      <td>East Toronto\\n</td>\n      <td>The Beaches</td>\n      <td>43.678148</td>\n      <td>-79.295349</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M4K\\n</td>\n      <td>East Toronto\\n</td>\n      <td>The Danforth West / Riverdale</td>\n      <td>43.683424</td>\n      <td>-79.354564</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M4L\\n</td>\n      <td>East Toronto\\n</td>\n      <td>India Bazaar / The Beaches West</td>\n      <td>43.668291</td>\n      <td>-79.315578</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M4M\\n</td>\n      <td>East Toronto\\n</td>\n      <td>Studio District</td>\n      <td>43.648000</td>\n      <td>-79.339260</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M4N\\n</td>\n      <td>Central Toronto\\n</td>\n      <td>Lawrence Park</td>\n      <td>43.729455</td>\n      <td>-79.386415</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "neighborhoods_venues_sorted.insert(0, 'Cluster Labels', kmeans.labels_)\ntoronto_merged = df\ntoronto_merged = toronto_merged.join(neighborhoods_venues_sorted.set_index('Neighborhood'), on='Neighborhood')\n\ntoronto_merged.head() # check the last columns!",
            "execution_count": 68,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 68,
                    "data": {
                        "text/plain": "  Postalcode            Borough                     Neighborhood   Latitude  \\\n0      M4E\\n     East Toronto\\n                      The Beaches  43.678148   \n1      M4K\\n     East Toronto\\n    The Danforth West / Riverdale  43.683424   \n2      M4L\\n     East Toronto\\n  India Bazaar / The Beaches West  43.668291   \n3      M4M\\n     East Toronto\\n                  Studio District  43.648000   \n4      M4N\\n  Central Toronto\\n                    Lawrence Park  43.729455   \n\n   Longitude  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n0 -79.295349               1                 Trail     Health Food Store   \n1 -79.354564               6                  Park      Business Service   \n2 -79.315578               1        Sandwich Place         Burrito Place   \n3 -79.339260               3      Business Service   Government Building   \n4 -79.386415               9                Lawyer              Bus Line   \n\n  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n0           Coffee Shop                Church                   Pub   \n1        Discount Store              Bus Line         Grocery Store   \n2        Ice Cream Shop                  Park           Coffee Shop   \n3          Night Market        Baseball Field              Wine Bar   \n4           Swim School           Fish Market  Fast Food Restaurant   \n\n  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n0              Wine Bar        Discount Store        Farmers Market   \n1            Donut Shop  Fast Food Restaurant        Farmers Market   \n2             Pet Store           Pizza Place                   Pub   \n3   Distribution Center  Fast Food Restaurant        Farmers Market   \n4        Farmers Market                  Farm    Falafel Restaurant   \n\n  9th Most Common Venue       10th Most Common Venue  \n0                  Farm           Falafel Restaurant  \n1                  Farm           Falafel Restaurant  \n2          Liquor Store                   Restaurant  \n3                  Farm           Falafel Restaurant  \n4     Electronics Store  Eastern European Restaurant  ",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postalcode</th>\n      <th>Borough</th>\n      <th>Neighborhood</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Cluster Labels</th>\n      <th>1st Most Common Venue</th>\n      <th>2nd Most Common Venue</th>\n      <th>3rd Most Common Venue</th>\n      <th>4th Most Common Venue</th>\n      <th>5th Most Common Venue</th>\n      <th>6th Most Common Venue</th>\n      <th>7th Most Common Venue</th>\n      <th>8th Most Common Venue</th>\n      <th>9th Most Common Venue</th>\n      <th>10th Most Common Venue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M4E\\n</td>\n      <td>East Toronto\\n</td>\n      <td>The Beaches</td>\n      <td>43.678148</td>\n      <td>-79.295349</td>\n      <td>1</td>\n      <td>Trail</td>\n      <td>Health Food Store</td>\n      <td>Coffee Shop</td>\n      <td>Church</td>\n      <td>Pub</td>\n      <td>Wine Bar</td>\n      <td>Discount Store</td>\n      <td>Farmers Market</td>\n      <td>Farm</td>\n      <td>Falafel Restaurant</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M4K\\n</td>\n      <td>East Toronto\\n</td>\n      <td>The Danforth West / Riverdale</td>\n      <td>43.683424</td>\n      <td>-79.354564</td>\n      <td>6</td>\n      <td>Park</td>\n      <td>Business Service</td>\n      <td>Discount Store</td>\n      <td>Bus Line</td>\n      <td>Grocery Store</td>\n      <td>Donut Shop</td>\n      <td>Fast Food Restaurant</td>\n      <td>Farmers Market</td>\n      <td>Farm</td>\n      <td>Falafel Restaurant</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M4L\\n</td>\n      <td>East Toronto\\n</td>\n      <td>India Bazaar / The Beaches West</td>\n      <td>43.668291</td>\n      <td>-79.315578</td>\n      <td>1</td>\n      <td>Sandwich Place</td>\n      <td>Burrito Place</td>\n      <td>Ice Cream Shop</td>\n      <td>Park</td>\n      <td>Coffee Shop</td>\n      <td>Pet Store</td>\n      <td>Pizza Place</td>\n      <td>Pub</td>\n      <td>Liquor Store</td>\n      <td>Restaurant</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M4M\\n</td>\n      <td>East Toronto\\n</td>\n      <td>Studio District</td>\n      <td>43.648000</td>\n      <td>-79.339260</td>\n      <td>3</td>\n      <td>Business Service</td>\n      <td>Government Building</td>\n      <td>Night Market</td>\n      <td>Baseball Field</td>\n      <td>Wine Bar</td>\n      <td>Distribution Center</td>\n      <td>Fast Food Restaurant</td>\n      <td>Farmers Market</td>\n      <td>Farm</td>\n      <td>Falafel Restaurant</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M4N\\n</td>\n      <td>Central Toronto\\n</td>\n      <td>Lawrence Park</td>\n      <td>43.729455</td>\n      <td>-79.386415</td>\n      <td>9</td>\n      <td>Lawyer</td>\n      <td>Bus Line</td>\n      <td>Swim School</td>\n      <td>Fish Market</td>\n      <td>Fast Food Restaurant</td>\n      <td>Farmers Market</td>\n      <td>Farm</td>\n      <td>Falafel Restaurant</td>\n      <td>Electronics Store</td>\n      <td>Eastern European Restaurant</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "markdown",
            "source": "#### Finally, let's visualize the resulting clusters"
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "map_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n\nx = np.arange(kclusters)\nys = [i+x+(i*x)**2 for i in range(kclusters)]\ncolors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\nmarkers_colors = []\nfor lat, lon, poi, cluster in zip(toronto_merged['Latitude'], toronto_merged['Longitude'], toronto_merged['Neighborhood'],kmeans.labels_):\n    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n    folium.CircleMarker([lat, lon], radius=5, popup=label, color=rainbow[cluster-1], fill=True, fill_color=rainbow[cluster-1], fill_opacity=0.7).add_to(map_clusters)\nmap_clusters",
            "execution_count": 69,
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 69,
                    "data": {
                        "text/plain": "<folium.folium.Map at 0x7f06a99f7630>",
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
                    },
                    "metadata": {}
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "print(\"Thank You! Hope You Liked. Still Learning... \")",
            "execution_count": 70,
            "outputs": [
                {
                    "output_type": "stream",
                    "text": "Thank You! Hope You Liked. Still Learning... \n",
                    "name": "stdout"
                }
            ]
        },
        {
            "metadata": {},
            "cell_type": "code",
            "source": "",
            "execution_count": null,
            "outputs": []
        }
    ],
    "metadata": {
        "kernelspec": {
            "name": "python3",
            "display_name": "Python 3.6",
            "language": "python"
        },
        "language_info": {
            "name": "python",
            "version": "3.6.9",
            "mimetype": "text/x-python",
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "pygments_lexer": "ipython3",
            "nbconvert_exporter": "python",
            "file_extension": ".py"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 2
}